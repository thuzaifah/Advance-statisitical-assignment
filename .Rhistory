# Display the table
kable(data,
col.names = c("Smoking Status",
"Coefficient", "SE", "p-value", "95% CI",
"Coefficient", "SE", "p-value", "95% CI"),
caption = "Table 2: Adjacent-category model or multinomial or baseline logit model") %>%
kable_styling(full_width = F, position = "center") %>%
add_header_above(c(" " = 1,
"Normal vs Diabetes" = 4,
"Prediabetes vs Diabetes" = 4)) %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, bold = TRUE)
ggplot(lnewdat, aes(x = age, y = Probability, colour = fbs_category)) +
geom_line() + facet_grid(sex ~ smoking_status, labeller="label_both")
knitr::opts_chunk$set(
message   = FALSE,
warning   = FALSE
)
library(here)
library(tidyverse)
library(haven)
library(gtsummary)
library(VGAM)
library(nnet)
library(broom)
library(knitr)
library(kableExtra)
library(tibble)
library(purrr)
library(gt)
library(ggplot2)
library(ggeffects)
library(reshape2)
library(data.table)
library(ordinal)
library(foreign)
library(brant)
library(patchwork)
datafbs.o <- read_csv("datamssm_b.csv")
summary(datafbs.o)
glimpse(datafbs.o)
datafbs.o <- datafbs.o %>%
mutate(across(where(is.character), as.factor))
glimpse(datafbs.o)
datafbs.o <- datafbs.o %>%
select(fbs, hba1c, ftrigliz, age, waist, smoking, gender)
# inspect the selected data
glimpse(datafbs.o)
#confirm the reference group
levels(datafbs.o$smoking)
levels(datafbs.o$gender)
datafbs.o <- datafbs.o %>%
rename(
fbs_raw = fbs,
hba1c = hba1c,
triglycerides = ftrigliz,
age = age,
waist_circumference = waist,
smoking_status = smoking,
sex = gender
)
datafbs.o <- datafbs.o %>%
mutate(cat_fbs = cut(fbs_raw,
breaks = c(-Inf, 5.6, 7.0, Inf),
labels = c("normal", "prediabetes", "diabetes"),
right = FALSE))
# Summarizing the min and max of 'fbs_raw' for each 'cat_fbs' group
datafbs.o %>%
select(cat_fbs, fbs_raw) %>%
group_by(cat_fbs) %>%
summarize(
min_fbs_raw = min(fbs_raw, na.rm = TRUE),
max_fbs_raw = max(fbs_raw, na.rm = TRUE)
)
lev <- c('diabetes','prediabetes','normal')
lev
datafbs.o <- datafbs.o %>%
mutate(cat_fbs1 = fct_relevel(cat_fbs, lev)) %>%
mutate(cat_fbs1 = ordered(cat_fbs1, levels = lev))
str(datafbs.o$cat_fbs1)
levels(datafbs.o$cat_fbs)
table(datafbs.o$cat_fbs)
levels(datafbs.o$cat_fbs1)
table(datafbs.o$cat_fbs1)
datafbs.o %>%
select(-fbs_raw, -cat_fbs1) %>%  # remove unwanted variables
tbl_summary(
by = cat_fbs,
type = list(
smoking_status ~ "categorical",
sex ~ "categorical"
),
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"
),
digits = all_continuous() ~ 2,
missing = "no"
) %>%
add_overall() %>%
bold_labels()
# Histogram of HbA1c by FBS category
p1 <- ggplot(datafbs.o, aes(x = hba1c, fill = cat_fbs)) +
geom_histogram(binwidth = 0.2, position = "dodge", alpha = 0.7, color = "black") +
facet_wrap(~ cat_fbs, scales = "free_y") +
labs(
title = "Distribution of HbA1c by FBS Category",
x = "HbA1c (%)",
y = "Count",
fill = "FBS Category"
) +
theme_minimal()
p1
# Histogram of Triglycerides by FBS category
p2 <- ggplot(datafbs.o, aes(x = triglycerides, fill = cat_fbs)) +
geom_histogram(binwidth = 0.2, position = "dodge", alpha = 0.7, color = "black") +
facet_wrap(~ cat_fbs, scales = "free_y") +
labs(
title = "Distribution of Triglycerides by FBS Category",
x = "triglycerides levels",
y = "Count",
fill = "FBS Category"
) +
theme_minimal()
p2
# Histogram of age by FBS category
p3 <- ggplot(datafbs.o, aes(x = age, fill = cat_fbs)) +
geom_histogram(binwidth = 0.2, position = "dodge", alpha = 0.7, color = "black") +
facet_wrap(~ cat_fbs, scales = "free_y") +
labs(
title = "Distribution of Age by FBS Category",
x = "Age",
y = "Count",
fill = "FBS Category"
) +
theme_minimal()
p3
# Histogram of Waist Circumference by FBS category
p4 <- ggplot(datafbs.o, aes(x = waist_circumference, fill = cat_fbs)) +
geom_histogram(binwidth = 0.2, position = "dodge", alpha = 0.7, color = "black") +
facet_wrap(~ cat_fbs, scales = "free_y") +
labs(
title = "Distribution of Waist Circumference by FBS Category",
x = "Waist Circumference",
y = "Count",
fill = "FBS Category"
) +
theme_minimal()
p4
# Bar plot of smoking status by FBS category
p5 <- ggplot(datafbs.o, aes(x = cat_fbs, fill = smoking_status)) +
geom_bar(position = "dodge", alpha = 0.7) +
labs(title = "Distribution of Smoking Status by FBS Category",
x = "FBS Category",
y = "Count",
fill = "Smoking Status") +
theme_minimal()
p5
# Bar plot of sex by FBS category
p6 <- ggplot(datafbs.o, aes(x = cat_fbs, fill = sex)) +
geom_bar(position = "dodge", alpha = 0.7) +
labs(title = "Distribution of Sex by FBS Category",
x = "FBS Category",
y = "Count",
fill = "Sex") +
theme_minimal()
p6
datafbs.o <-
datafbs.o %>%
mutate(cat_fbs2 = fct_relevel(cat_fbs, lev))
mlogit1 <-
vglm(cat_fbs2 ~ smoking_status, multinomial, data = datafbs.o)
summary(mlogit1)
conf_intervals <- confint(mlogit1)
print(conf_intervals)
exp(coef(mlogit1))
# Define function to compute 95% CI for RRR
calc_ci_rrr <- function(estimate, stderr) {
lower <- estimate - 1.96 * stderr
upper <- estimate + 1.96 * stderr
return(c(exp(lower), exp(upper)))
}
# Input full results manually
coefficients <- data.frame(
Term = c(
"(Intercept):1", "(Intercept):2",
"smoking_statusquitted smoking:1", "smoking_statusquitted smoking:2",
"smoking_statusstill smoking:1", "smoking_statusstill smoking:2"
),
Estimate = c(
-1.54983, -1.11247,
0.30237,  0.25805,
-0.13946,  0.02102
),
StdError = c(
0.05297, 0.04457,
0.16323, 0.14073,
0.13488, 0.10736
),
ZValue = c(
-29.256, -24.962,
1.852,   1.834,
-1.034,   0.196
),
PValue = c(
"<2e-16", "<2e-16",
0.0640,  0.0667,
0.3012,  0.8448
)
)
# Calculate RRR and 95% CI for RRR
coefficients <- coefficients %>%
mutate(
RRR = exp(Estimate),
CI_RRR = map2(Estimate, StdError, calc_ci_rrr)
) %>%
unnest_wider(CI_RRR, names_sep = "_") %>%
rename(
CI_RRR_Lower = CI_RRR_1,
CI_RRR_Upper = CI_RRR_2
)
# Output the table
kable(coefficients, digits = 3, caption = "Combined Coefficients and RRR Table with Confidence Intervals")
table(datafbs.o$cat_fbs) ; table(datafbs.o$cat_fbs1)
datafbs.o1 <-
datafbs.o %>%
filter(cat_fbs == 'diabetes' | cat_fbs == 'prediabetes')
cr1 <- glm(cat_fbs1 ~ smoking_status, family = binomial(link ='logit'),
data = datafbs.o1)
summary(cr1)
datafbs.o2 <- datafbs.o %>%
filter(cat_fbs == 'diabetes' |
cat_fbs == 'prediabetes'|
cat_fbs == 'normal')
table(datafbs.o2$cat_fbs1)
datafbs.o2 <- datafbs.o2 %>%
mutate(cat_fbs2 = ifelse(cat_fbs1 == "diabetes", 0,
ifelse(cat_fbs1 == "prediabetes",0,1)))
table(datafbs.o2$cat_fbs1) ; table(datafbs.o2$cat_fbs2)
cr2 <-
glm(cat_fbs2 ~ smoking_status, family = binomial(link ='logit'),
data = datafbs.o2)
summary(cr2)
# Function to calculate confidence intervals
calc_ci <- function(estimate, stderr) {
lower <- estimate - 1.96 * stderr
upper <- estimate + 1.96 * stderr
return(c(lower, upper))
}
# Create cr1 results
cr1_results <- data.frame(
Model = "cr1",
Term = c("(Intercept)", "smoking_statusquitted smoking", "smoking_statusstill smoking"),
Estimate = c(0.43736, -0.04432, 0.16048),
StdError = c(0.06172, 0.18662, 0.15472),
ZValue = c(7.086, -0.237, 1.037),
PValue = c(1.38e-12, 0.812, 0.300)
) %>%
mutate(CI = purrr::map2(Estimate, StdError, calc_ci)) %>%
tidyr::unnest_wider(CI, names_sep = "_")
# Create cr2 results
cr2_results <- data.frame(
Model = "cr2",
Term = c("(Intercept)", "smoking_statusquitted smoking", "smoking_statusstill smoking"),
Estimate = c(0.61428, -0.27567, 0.03891),
StdError = c(0.03741, 0.11909, 0.09168),
ZValue = c(16.419, -2.315, 0.424),
PValue = c(2e-16, 0.0206, 0.6713)
) %>%
mutate(CI = purrr::map2(Estimate, StdError, calc_ci)) %>%
tidyr::unnest_wider(CI, names_sep = "_")
# Combine the data frames
combined_results <- bind_rows(cr1_results, cr2_results) %>%
rename(CI_Lower = CI_1, CI_Upper = CI_2)
# Print the combined table in a tidy format
kable(combined_results, format = "pipe", caption = "Combined Logistic Regression Results with Confidence Intervals")
# Calculate mean fbs for each category of cat_fbs
mean_fbs_by_category <- datafbs.o %>%
group_by(cat_fbs) %>%
summarize(mean_fbs = mean(fbs_raw, na.rm = TRUE))
# Display the result
print(mean_fbs_by_category)
levels(datafbs.o$cat_fbs)
o.age <- clm(cat_fbs ~ age, data=datafbs.o)
summary(o.age)
tidy(o.age, conf.int = TRUE)
tidy(o.age, exponentiate = TRUE ,conf.int = TRUE)
exp(1 * 0.013)
exp(10 * 0.013)
exp(1 * -0.013)
exp(10 * -0.013)
polr_cr3 <- MASS::polr(cat_fbs ~ age, data = datafbs.o, Hess = TRUE)
summary(polr_cr3)
prob_polr <- predict(polr_cr3, type = 'probs')
head(prob_polr) ; tail(prob_polr)
# Create a new data frame with age, smoke, and gender
newdat <- cbind(datafbs.o[, c("age", "smoking_status","sex")], prob_polr)
# Reshape the data to long format
lnewdat <- melt(newdat, id.vars = c("age", "smoking_status", "sex"),
variable.name = "fbs_category", value.name = "Probability")
# View the first few rows
head(lnewdat)
ggplot(lnewdat, aes(x = age, y = Probability, colour = fbs_category)) +
geom_line() + facet_grid(sex ~ smoking_status, labeller="label_both")
summary(o.age)
newData <- expand.grid(age = unique(datafbs.o$age))
head(newData)
lp.o.age <- predict(o.age, newdata = newData, type = 'linear.predictor')
lp.o.age
coef.o.age<- coef(o.age)
coef.o.age
age_value <- 44
lp.o1.bx <- coef.o.age['age'] * age_value
lp.o1.bx <- 0.0342942 * 44
lp.o1.bx <- 1.5089448
logit1 <- coef.o.age['normal|prediabetes'] - lp.o1.bx
logit2 <- coef.o.age['prediabetes|diabetes'] - lp.o1.bx
pLeq1 <- 1 / (1 + exp(-logit1))  # p(Y <= first threshold)
pLeq2 <- 1 / (1 + exp(-logit2))  # p(Y <= second threshold)
pLeq1 <- 1 / (1 + exp(-0.7772651))  # = 0.6850903
pLeq2 <- 1 / (1 + exp(-2.0646543))  # = 0.8874200
pMat <- cbind(
p1 = pLeq1,                   # Probability of being in the first category
p2 = pLeq2 - pLeq1,           # Probability of being in the second category
p3 = 1 - pLeq2                # Probability of being in the third category
)
pMat
predict(o.age, newdata = newData, type = 'prob')
brant(polr_cr3)
datafbs.o %>%
select(-fbs_raw, -cat_fbs1, -cat_fbs2) %>%  # remove unwanted variables
tbl_summary(
by = cat_fbs,
type = list(
smoking_status ~ "categorical",
sex ~ "categorical"
),
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"
),
digits = all_continuous() ~ 2,
missing = "no"
) %>%
add_overall() %>%
bold_labels() %>%
modify_caption("**Table 1: Characteristics of FBS Categories**")
data <- data.frame(
Smoking_Status = c("Quitted Smoking", "Still Smoking"),
Coefficient_normal_vs_diabetes = c(0.30237, -0.13946),
SE_normal_vs_diabetes = c(0.16323, 0.13488),
p_value_normal_vs_diabetes = c(0.0640, 0.3012),
CI_normal_vs_diabetes = c("(-0.02, 0.62)", "(-0.40, 0.12)"),
Coefficient_prediabetes_vs_diabetes = c(0.25805, 0.02102),
SE_prediabetes_vs_diabetes = c(0.14073, 0.10736),
p_value_prediabetes_vs_diabetes = c(0.0667, 0.8448),
CI_prediabetes_vs_diabetes = c("(-0.02, 0.54)", "(-0.19, 0.23)")
)
# Display the table
kable(data,
col.names = c("Smoking Status",
"Coefficient", "SE", "p-value", "95% CI",
"Coefficient", "SE", "p-value", "95% CI"),
caption = "Table 2: Adjacent-category model or multinomial or baseline logit model") %>%
kable_styling(full_width = F, position = "center") %>%
add_header_above(c(" " = 1,
"Normal vs Diabetes" = 4,
"Prediabetes vs Diabetes" = 4)) %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, bold = TRUE)
ggplot(lnewdat, aes(x = age, y = Probability, colour = fbs_category)) +
geom_line() + facet_grid(sex ~ smoking_status, labeller="label_both")
datafbs.o <-
datafbs.o %>%
mutate(cat_fbs2 = fct_relevel(cat_fbs, lev))
mlogit1 <-
vglm(cat_fbs2 ~ smoking_status, multinomial, data = datafbs.o)
summary(mlogit1)
levels(datafbs.o$cat_fbs2)
levels(datafbs.o$cat_fbs)
levels(datafbs.o$cat_fbs1)
datafbs.o <- datafbs.o %>%
mutate(cat_fbs1 = fct_relevel(cat_fbs, lev)) %>%
mutate(cat_fbs1 = ordered(cat_fbs1, levels = lev))
str(datafbs.o$cat_fbs1)
levels(datafbs.o$cat_fbs)
table(datafbs.o$cat_fbs)
levels(datafbs.o$cat_fbs1)
levels(datafbs.o$cat_fbs2)
mlogit1 <-
vglm(cat_fbs ~ smoking_status, multinomial, data = datafbs.o)
summary(mlogit1)
conf_intervals <- confint(mlogit1)
print(conf_intervals)
exp(coef(mlogit1))
# Define function to compute 95% CI for RRR
calc_ci_rrr <- function(estimate, stderr) {
lower <- estimate - 1.96 * stderr
upper <- estimate + 1.96 * stderr
return(c(exp(lower), exp(upper)))
}
# Input full results manually
coefficients <- data.frame(
Term = c(
"(Intercept):1", "(Intercept):2",
"smoking_statusquitted smoking:1", "smoking_statusquitted smoking:2",
"smoking_statusstill smoking:1", "smoking_statusstill smoking:2"
),
Estimate = c(
-1.54983, -1.11247,
0.30237,  0.25805,
-0.13946,  0.02102
),
StdError = c(
0.05297, 0.04457,
0.16323, 0.14073,
0.13488, 0.10736
),
ZValue = c(
-29.256, -24.962,
1.852,   1.834,
-1.034,   0.196
),
PValue = c(
"<2e-16", "<2e-16",
0.0640,  0.0667,
0.3012,  0.8448
)
)
# Calculate RRR and 95% CI for RRR
coefficients <- coefficients %>%
mutate(
RRR = exp(Estimate),
CI_RRR = map2(Estimate, StdError, calc_ci_rrr)
) %>%
unnest_wider(CI_RRR, names_sep = "_") %>%
rename(
CI_RRR_Lower = CI_RRR_1,
CI_RRR_Upper = CI_RRR_2
)
# Output the table
kable(coefficients, digits = 3, caption = "Combined Coefficients and RRR Table with Confidence Intervals")
# Define function to compute 95% CI for RRR
calc_ci_rrr <- function(estimate, stderr) {
lower <- estimate - 1.96 * stderr
upper <- estimate + 1.96 * stderr
return(c(exp(lower), exp(upper)))
}
# Input full results manually
coefficients <- data.frame(
Term = c(
"(Intercept):1", "(Intercept):2",
"smoking_statusquitted smoking:1", "smoking_statusquitted smoking:2",
"smoking_statusstill smoking:1", "smoking_statusstill smoking:2"
),
Estimate = c(
1.54983, 0.43736,
-0.30237, -0.04432,
0.13946,  0.16048
),
StdError = c(
0.05297, 0.06172,
0.16323, 0.18662,
0.13488, 0.15472
),
ZValue = c(
29.256, 7.086,
-1.852, -0.237,
1.034, 1.037
),
PValue = c(
"<2e-16", "1.38e-12",
"0.064", "0.812",
"0.301", "0.300"
)
)
# Calculate RRR and 95% CI for RRR
coefficients <- coefficients %>%
mutate(
RRR = exp(Estimate),
CI_RRR = map2(Estimate, StdError, calc_ci_rrr)
) %>%
unnest_wider(CI_RRR, names_sep = "_") %>%
rename(
CI_RRR_Lower = CI_RRR_1,
CI_RRR_Upper = CI_RRR_2
)
# Output the table
kable(coefficients, digits = 3, caption = "Combined Coefficients and RRR Table with Confidence Intervals")
data <- data.frame(
Smoking_Status = c("Quitted Smoking", "Still Smoking"),
Coefficient_normal_vs_diabetes = c(-0.30237, 0.13946),
SE_normal_vs_diabetes = c(0.16323, 0.13488),
p_value_normal_vs_diabetes = c(0.064, 0.301),
CI_normal_vs_diabetes = c("(-0.62, 0.02)", "(-0.12, 0.40)"),
Coefficient_prediabetes_vs_diabetes = c(-0.04432, 0.16048),
SE_prediabetes_vs_diabetes = c(0.18662, 0.15472),
p_value_prediabetes_vs_diabetes = c(0.812, 0.300),
CI_prediabetes_vs_diabetes = c("(-0.41, 0.32)", "(-0.14, 0.46)")
)
# Display the table
kable(data,
col.names = c("Smoking Status",
"Coefficient", "SE", "p-value", "95% CI",
"Coefficient", "SE", "p-value", "95% CI"),
caption = "Table 2: Adjacent-category model or multinomial or baseline logit model") %>%
kable_styling(full_width = FALSE, position = "center") %>%
add_header_above(c(" " = 1,
"Normal vs Diabetes" = 4,
"Prediabetes vs Diabetes" = 4)) %>%
column_spec(1, bold = TRUE) %>%
row_spec(0, bold = TRUE)
